import {useEffect, useState} from 'react';

const Translations: {[locale: string]: {[key: string]: string}} = {
    en: { 
        language: 'Language',
        lang: 'English',
        feedback: 'Feedback',
        about: 'About',
        home: 'Home',
        search: 'Search',
        inspiration: 'Inspiration',
        mine: 'Mine',
        latest: 'Latest',
        discover: 'Discover',
        setting: 'Setting',
        signIn: 'Sign in',
        signUp: 'Sign up',
        signOut: 'Sign out',
        myLikes: 'My Likes',
        myCollections: 'My Collections',
        browsingHistory: 'Browsing History',
        ok: 'OK',
        cancle: 'Cancle',
        like: 'Like',
        collect: 'Collect',
        tags: 'Tags',
        noCollection: 'No collection',
        createNewCollection: 'Create a new collection',
        error: 'Error',
        noPhotosPermission: 'No permission to access photos',
        noCameraPermission: 'No permission to use camera',
        publish: 'Publish',
        slogan: 'Inspire Anytime & Anywhere',
        loading: 'Loading',
        signInToUseThisFunction: 'Sign in to use this function',
        edit: 'Edit',
        delete: 'Delete',
        copySuccess: 'Copy successfully',
        copyLink: 'Copy link',
        title: 'Title',
        optional: 'Optional',
        introduction: 'Introduction',
        clickToSignIn: 'Click to sign in',
        report: 'Report',
        reportContent: 'Report this',
        content: 'Content',
        submit: 'Submit',
        submitSuccess: 'Submit successfully',
        thanksFeedback: 'Thanks for your feedback, we will deal with it as soon as possible.',
        account: 'Account',
        accountPlaceholder: 'username/email',
        password: 'Password',
        createNewAccount: 'Create a new account',
        signInFailed: 'Sign in failed',
        errorAccountOrPassword: 'Error account or password, please retry.',
        pageNotFound: 'Page Not Found',
        gobackHome: 'Goback Home',
        email: 'Email',
        confirmPassword: 'Confirm Password',
        username: 'Username',
        signUpSuccess: 'Sign up successfully',
        signUpFail: 'Sign up failed',
        emptyUsername: 'please input username',
        emptyEmail: 'please input email',
        emptyPassword: 'please input password',
     },
    zh: { 
        language: '语言',
        lang: '简体中文',
        feedback: '反馈',
        about: '关于',
        home: '首页',
        search: '搜索',
        inspiration: '灵感',
        mine: '我',
        latest: '最新',
        discover: '发现',
        setting: '设置',
        signIn: '登录',
        signUp: '注册',
        signOut: '退出登录',
        myLikes: '我的喜欢',
        myCollections: '我的收藏',
        browsingHistory: '浏览记录',
        ok: '确定',
        cancle: '取消',
        like: '喜欢',
        collect: '收藏',
        tags: '标签',
        noCollection: '暂无收藏夹',
        createNewCollection: '创建收藏夹',
        error: '错误',
        noPhotosPermission: '无权访问相册内容',
        noCameraPermission: '无权使用照相功能',
        publish: '发布',
        slogan: '随时随地记录灵感',
        loading: '加载中',
        signInToUseThisFunction: '需要登录才能使用记录灵感功能',
        edit: '编辑',
        delete: '删除',
        copySuccess: '复制成功',
        copyLink: '复制链接',
        title: '标题',
        optional: '选填',
        introduction: '简介',
        clickToSignIn: '点击登录',
        report: '举报',
        reportContent: '举报内容',
        content: '内容',
        submit: '提交',
        submitSuccess: '提交成功',
        thanksFeedback: '感谢您的反馈，我们会尽快处理！',
        account: '账号',
        accountPlaceholder: '用户名/邮箱',
        password: '密码',
        createNewAccount: '注册账号',
        signInFailed: '登录失败',
        errorAccountOrPassword: '账号或密码有误，请重新输入！',
        pageNotFound: '页面不存在',
        gobackHome: '回到首页',
        email: '邮箱',
        confirmPassword: '确认密码',
        username: '用户名',
        signUpSuccess: '注册成功',
        signUpFail: '注册失败',
        emptyUsername: '请输入用户名',
        emptyEmail: '请输入邮箱',
        emptyPassword: '请输入密码',
     },
};

export default function useTranslate() {

    const [locale, setLocale] = useState<'en' | 'zh'>('en');

    useEffect(() => {

    }, [locale])

    const translate = (key: string) => {
        return Translations[locale][key]
    }

    return {
        locale,
        setLocale,
        translate,
    }

}